// <auto-generated />
using System;
using Hathor.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hathor.Web.Migrations
{
    [DbContext(typeof(HathorContext))]
    [Migration("20221120202231_FixNullableUploadDateTimeOffset")]
    partial class FixNullableUploadDateTimeOffset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hathor.Web.Models.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourceAsUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("SourcedDateTime")
                        .IsRequired()
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Entries")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RekordboxCollections");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Library", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PlaylistsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("UploadDateTimeOffset")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("PlaylistsId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UploadDateTimeOffset");

                    b.ToTable("RekordboxLibraries");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PlaylistNode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Entries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlaylistNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistNodeId");

                    b.ToTable("RekordboxPlaylistNodes");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PlaylistNodeTrack", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlaylistNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrackID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistNodeId");

                    b.HasIndex("TrackID");

                    b.ToTable("RekordboxPlaylistNodeTracks");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Playlists", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlaylistNodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistNodeId");

                    b.ToTable("RekordboxPlaylists");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PositionMark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Blue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Green")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Num")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Red")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("RekordboxPositionMarks");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RekordboxProducts");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Tempo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Battito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bpm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inizio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RekordboxTempos");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Album")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AverageBpm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BitRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Composer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateAdded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Grouping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PlayCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remixer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SampleRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TEMPOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tonality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrackNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("TEMPOId");

                    b.HasIndex("TrackID", "Artist", "Name", "Remixer", "Genre");

                    b.ToTable("RekordboxTracks");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Library", b =>
                {
                    b.HasOne("Hathor.Web.Models.Rekordbox.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hathor.Web.Models.Rekordbox.Playlists", "Playlists")
                        .WithMany()
                        .HasForeignKey("PlaylistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hathor.Web.Models.Rekordbox.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Playlists");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PlaylistNode", b =>
                {
                    b.HasOne("Hathor.Web.Models.Rekordbox.PlaylistNode", null)
                        .WithMany("PlaylistNodes")
                        .HasForeignKey("PlaylistNodeId");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PlaylistNodeTrack", b =>
                {
                    b.HasOne("Hathor.Web.Models.Rekordbox.PlaylistNode", null)
                        .WithMany("Tracks")
                        .HasForeignKey("PlaylistNodeId");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Playlists", b =>
                {
                    b.HasOne("Hathor.Web.Models.Rekordbox.PlaylistNode", "PlaylistNode")
                        .WithMany()
                        .HasForeignKey("PlaylistNodeId");

                    b.Navigation("PlaylistNode");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PositionMark", b =>
                {
                    b.HasOne("Hathor.Web.Models.Rekordbox.Track", null)
                        .WithMany("PositionMarks")
                        .HasForeignKey("TrackId");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Track", b =>
                {
                    b.HasOne("Hathor.Web.Models.Rekordbox.Collection", null)
                        .WithMany("Tracks")
                        .HasForeignKey("CollectionId");

                    b.HasOne("Hathor.Web.Models.Rekordbox.Tempo", "TEMPO")
                        .WithMany()
                        .HasForeignKey("TEMPOId");

                    b.Navigation("TEMPO");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Collection", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.PlaylistNode", b =>
                {
                    b.Navigation("PlaylistNodes");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Hathor.Web.Models.Rekordbox.Track", b =>
                {
                    b.Navigation("PositionMarks");
                });
#pragma warning restore 612, 618
        }
    }
}
